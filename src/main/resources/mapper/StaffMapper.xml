<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.edward.graduationdesign.dao.StaffMapper">
  <resultMap id="BaseResultMap" type="priv.edward.graduationdesign.model.Staff">
    <constructor>
      <idArg column="staffId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="staffName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="staffGender" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="salary" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="jobId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birthday" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="employmentDate" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="ssId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="imagePath" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    staffId, staffName, staffGender, salary, jobId, birthday, employmentDate, ssId, imagePath
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from staff
    where staffId = #{staffid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from staff
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff
    where staffId = #{staffid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="priv.edward.graduationdesign.model.Staff">
    insert into staff (staffId, staffName, staffGender, 
      salary, jobId, birthday, 
      employmentDate, ssId, imagePath
      )
    values (#{staffid,jdbcType=INTEGER}, #{staffname,jdbcType=VARCHAR}, #{staffgender,jdbcType=CHAR}, 
      #{salary,jdbcType=REAL}, #{jobid,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
      #{employmentdate,jdbcType=DATE}, #{ssid,jdbcType=INTEGER}, #{imagepath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="priv.edward.graduationdesign.model.Staff">
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        staffId,
      </if>
      <if test="staffname != null">
        staffName,
      </if>
      <if test="staffgender != null">
        staffGender,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="jobid != null">
        jobId,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="employmentdate != null">
        employmentDate,
      </if>
      <if test="ssid != null">
        ssId,
      </if>
      <if test="imagepath != null">
        imagePath,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        #{staffid,jdbcType=INTEGER},
      </if>
      <if test="staffname != null">
        #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="staffgender != null">
        #{staffgender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=REAL},
      </if>
      <if test="jobid != null">
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="employmentdate != null">
        #{employmentdate,jdbcType=DATE},
      </if>
      <if test="ssid != null">
        #{ssid,jdbcType=INTEGER},
      </if>
      <if test="imagepath != null">
        #{imagepath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="priv.edward.graduationdesign.model.Staff">
    update staff
    <set>
      <if test="staffname != null">
        staffName = #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="staffgender != null">
        staffGender = #{staffgender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=REAL},
      </if>
      <if test="jobid != null">
        jobId = #{jobid,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="employmentdate != null">
        employmentDate = #{employmentdate,jdbcType=DATE},
      </if>
      <if test="ssid != null">
        ssId = #{ssid,jdbcType=INTEGER},
      </if>
      <if test="imagepath != null">
        imagePath = #{imagepath,jdbcType=VARCHAR},
      </if>
    </set>
    where staffId = #{staffid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="priv.edward.graduationdesign.model.Staff">
    update staff
    set staffName = #{staffname,jdbcType=VARCHAR},
      staffGender = #{staffgender,jdbcType=CHAR},
      salary = #{salary,jdbcType=REAL},
      jobId = #{jobid,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      employmentDate = #{employmentdate,jdbcType=DATE},
      ssId = #{ssid,jdbcType=INTEGER},
      imagePath = #{imagepath,jdbcType=VARCHAR}
    where staffId = #{staffid,jdbcType=INTEGER}
  </update>

  <resultMap id="StaffAndJob" type="priv.edward.graduationdesign.model.Staff">
    <id column="staffId" property="staffid" />
    <result column="staffName" property="staffname" />
    <result column="staffGender" property="staffgender" />
    <result column="salary" property="salary" />
    <result column="birthday" property="birthday" />
    <result column="employmentDate" property="employmentdate" />
    <result column="ssId" property="ssid" />
    <result column="imagePath" property="imagepath" />
    <association property="job" javaType="priv.edward.graduationdesign.model.Job">
      <id column="jobId" property="jobid"/>
      <result column="jobName" property="jobname"/>
      <result column="specificity" property="specificity"/>
    </association>
  </resultMap>

  <select id="selectAllStaffInfo" resultType="priv.edward.graduationdesign.model.StaffInfo">
    select
    staff.staffId,staff.staffName,staff.staffGender,staff.salary,
    staff.jobId,staff.birthday,staff.employmentDate,staff.ssId,staff.imagePath,
    job.jobId,job.jobName,job.specificity,
    staffstate.ssId,staffstate.ssName
    from ( staff left join staffstate on staff.ssId = staffstate.ssId ) left join job on staff.jobId = job.jobId
  </select>
  <select id="selectSingleStaffInfo" parameterType="java.lang.Integer" resultType="priv.edward.graduationdesign.model.StaffInfo">
    select
    staff.staffId,staff.staffName,staff.staffGender,staff.salary,
    staff.jobId,staff.birthday,staff.employmentDate,staff.ssId,staff.imagePath,
    job.jobId,job.jobName,job.specificity,
    staffstate.ssId,staffstate.ssName
    from ( staff left join staffstate on staff.ssId = staffstate.ssId ) left join job on staff.jobId = job.jobId
    where staff.staffId = #{staffid,jdbcType=INTEGER}
  </select>
</mapper>