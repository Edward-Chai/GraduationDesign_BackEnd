<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.edward.graduationdesign.dao.StaffMapper">
  <resultMap id="BaseResultMap" type="priv.edward.graduationdesign.model.Staff">
    <constructor>
      <idArg column="staffId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="staffName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="staffGender" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="salary" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="jobId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="birthday" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="employmentDate" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="ssId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="imagePath" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    staffId, staffName, staffGender, salary, jobId, birthday, employmentDate, ssId, imagePath
  </sql>
  <select id="selectByExample" parameterType="priv.edward.graduationdesign.model.StaffExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff
    where staffId = #{staffid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff
    where staffId = #{staffid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="priv.edward.graduationdesign.model.StaffExample">
    delete from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="priv.edward.graduationdesign.model.Staff">
    insert into staff (staffId, staffName, staffGender, 
      salary, jobId, birthday, 
      employmentDate, ssId, imagePath
      )
    values (#{staffid,jdbcType=INTEGER}, #{staffname,jdbcType=VARCHAR}, #{staffgender,jdbcType=CHAR}, 
      #{salary,jdbcType=REAL}, #{jobid,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
      #{employmentdate,jdbcType=DATE}, #{ssid,jdbcType=INTEGER}, #{imagepath,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="priv.edward.graduationdesign.model.Staff">
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        staffId,
      </if>
      <if test="staffname != null">
        staffName,
      </if>
      <if test="staffgender != null">
        staffGender,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="jobid != null">
        jobId,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="employmentdate != null">
        employmentDate,
      </if>
      <if test="ssid != null">
        ssId,
      </if>
      <if test="imagepath != null">
        imagePath,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="staffid != null">
        #{staffid,jdbcType=INTEGER},
      </if>
      <if test="staffname != null">
        #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="staffgender != null">
        #{staffgender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=REAL},
      </if>
      <if test="jobid != null">
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="employmentdate != null">
        #{employmentdate,jdbcType=DATE},
      </if>
      <if test="ssid != null">
        #{ssid,jdbcType=INTEGER},
      </if>
      <if test="imagepath != null">
        #{imagepath,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="priv.edward.graduationdesign.model.StaffExample" resultType="java.lang.Long">
    select count(*) from staff
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update staff
    <set>
      <if test="record.staffid != null">
        staffId = #{record.staffid,jdbcType=INTEGER},
      </if>
      <if test="record.staffname != null">
        staffName = #{record.staffname,jdbcType=VARCHAR},
      </if>
      <if test="record.staffgender != null">
        staffGender = #{record.staffgender,jdbcType=CHAR},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=REAL},
      </if>
      <if test="record.jobid != null">
        jobId = #{record.jobid,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.employmentdate != null">
        employmentDate = #{record.employmentdate,jdbcType=DATE},
      </if>
      <if test="record.ssid != null">
        ssId = #{record.ssid,jdbcType=INTEGER},
      </if>
      <if test="record.imagepath != null">
        imagePath = #{record.imagepath,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update staff
    set staffId = #{record.staffid,jdbcType=INTEGER},
      staffName = #{record.staffname,jdbcType=VARCHAR},
      staffGender = #{record.staffgender,jdbcType=CHAR},
      salary = #{record.salary,jdbcType=REAL},
      jobId = #{record.jobid,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=DATE},
      employmentDate = #{record.employmentdate,jdbcType=DATE},
      ssId = #{record.ssid,jdbcType=INTEGER},
      imagePath = #{record.imagepath,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="priv.edward.graduationdesign.model.Staff">
    update staff
    <set>
      <if test="staffname != null">
        staffName = #{staffname,jdbcType=VARCHAR},
      </if>
      <if test="staffgender != null">
        staffGender = #{staffgender,jdbcType=CHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=REAL},
      </if>
      <if test="jobid != null">
        jobId = #{jobid,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="employmentdate != null">
        employmentDate = #{employmentdate,jdbcType=DATE},
      </if>
      <if test="ssid != null">
        ssId = #{ssid,jdbcType=INTEGER},
      </if>
      <if test="imagepath != null">
        imagePath = #{imagepath,jdbcType=VARCHAR},
      </if>
    </set>
    where staffId = #{staffid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="priv.edward.graduationdesign.model.Staff">
    update staff
    set staffName = #{staffname,jdbcType=VARCHAR},
      staffGender = #{staffgender,jdbcType=CHAR},
      salary = #{salary,jdbcType=REAL},
      jobId = #{jobid,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      employmentDate = #{employmentdate,jdbcType=DATE},
      ssId = #{ssid,jdbcType=INTEGER},
      imagePath = #{imagepath,jdbcType=VARCHAR}
    where staffId = #{staffid,jdbcType=INTEGER}
  </update>
</mapper>