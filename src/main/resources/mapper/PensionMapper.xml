<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.edward.graduationdesign.dao.PensionMapper">
  <resultMap id="BaseResultMap" type="priv.edward.graduationdesign.model.Pension">
    <constructor>
      <idArg column="pensionId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pensionBalance" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="pensionAvg" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="pensionAdd" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="pensionMonthly" javaType="java.lang.Float" jdbcType="REAL" />
      <arg column="pensionState" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="staffId" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    pensionId, pensionBalance, pensionAvg, pensionAdd, pensionMonthly, pensionState, 
    staffId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pension
    where pensionId = #{pensionid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from pension
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pension
    where pensionId = #{pensionid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="priv.edward.graduationdesign.model.Pension">
    insert into pension (pensionId, pensionBalance, pensionAvg, 
      pensionAdd, pensionMonthly, pensionState, 
      staffId)
    values (#{pensionid,jdbcType=INTEGER}, #{pensionbalance,jdbcType=REAL}, #{pensionavg,jdbcType=REAL}, 
      #{pensionadd,jdbcType=REAL}, #{pensionmonthly,jdbcType=REAL}, #{pensionstate,jdbcType=CHAR}, 
      #{staffid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="priv.edward.graduationdesign.model.Pension">
    insert into pension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pensionid != null">
        pensionId,
      </if>
      <if test="pensionbalance != null">
        pensionBalance,
      </if>
      <if test="pensionavg != null">
        pensionAvg,
      </if>
      <if test="pensionadd != null">
        pensionAdd,
      </if>
      <if test="pensionmonthly != null">
        pensionMonthly,
      </if>
      <if test="pensionstate != null">
        pensionState,
      </if>
      <if test="staffid != null">
        staffId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pensionid != null">
        #{pensionid,jdbcType=INTEGER},
      </if>
      <if test="pensionbalance != null">
        #{pensionbalance,jdbcType=REAL},
      </if>
      <if test="pensionavg != null">
        #{pensionavg,jdbcType=REAL},
      </if>
      <if test="pensionadd != null">
        #{pensionadd,jdbcType=REAL},
      </if>
      <if test="pensionmonthly != null">
        #{pensionmonthly,jdbcType=REAL},
      </if>
      <if test="pensionstate != null">
        #{pensionstate,jdbcType=CHAR},
      </if>
      <if test="staffid != null">
        #{staffid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="priv.edward.graduationdesign.model.Pension">
    update pension
    <set>
      <if test="pensionbalance != null">
        pensionBalance = #{pensionbalance,jdbcType=REAL},
      </if>
      <if test="pensionavg != null">
        pensionAvg = #{pensionavg,jdbcType=REAL},
      </if>
      <if test="pensionadd != null">
        pensionAdd = #{pensionadd,jdbcType=REAL},
      </if>
      <if test="pensionmonthly != null">
        pensionMonthly = #{pensionmonthly,jdbcType=REAL},
      </if>
      <if test="pensionstate != null">
        pensionState = #{pensionstate,jdbcType=CHAR},
      </if>
      <if test="staffid != null">
        staffId = #{staffid,jdbcType=INTEGER},
      </if>
    </set>
    where pensionId = #{pensionid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="priv.edward.graduationdesign.model.Pension">
    update pension
    set pensionBalance = #{pensionbalance,jdbcType=REAL},
      pensionAvg = #{pensionavg,jdbcType=REAL},
      pensionAdd = #{pensionadd,jdbcType=REAL},
      pensionMonthly = #{pensionmonthly,jdbcType=REAL},
      pensionState = #{pensionstate,jdbcType=CHAR},
      staffId = #{staffid,jdbcType=INTEGER}
    where pensionId = #{pensionid,jdbcType=INTEGER}
  </update>

  <resultMap id="PensionStaffInfoMap" type="priv.edward.graduationdesign.model.PensionStaffInfo">
    <id column="pensionId" property="pensionid" />
    <result column="pensionBalance" property="pensionbalance" />
    <result column="pensionAvg" property="pensionavg" />
    <result column="pensionAdd" property="pensionadd" />
    <result column="pensionMonthly" property="pensionmonthly" />
    <result column="pensionState" property="pensionstate" />
    <association property="staffInfo" column="staffId" select="priv.edward.graduationdesign.dao.StaffMapper.selectSingleStaffInfo"></association>
<!--    <collection column="staffId" javaType="ArrayList" ofType="priv.edward.graduationdesign.model.Staff" property="staffList" select="priv.edward.graduationdesign.dao.StaffMapper.selectByPrimaryKeyList">-->
<!--    </collection>-->
  </resultMap>
  <select id="selectPensionStaffInfo" resultMap="PensionStaffInfoMap">
        select * from pension
  </select>
  <select id="selectSinglePensionStaffInfo" parameterType="java.lang.Integer" resultMap="PensionStaffInfoMap">
        select * from pension
        where pensionId = #{pensionid,jdbcType=INTEGER}
  </select>
</mapper>