<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.edward.graduationdesign.dao.JobMapper">
  <resultMap id="BaseResultMap" type="priv.edward.graduationdesign.model.Job">
    <constructor>
      <idArg column="jobId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="jobName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="specificity" javaType="java.lang.String" jdbcType="CHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    jobId, jobName, specificity
  </sql>
  <select id="selectByExample" parameterType="priv.edward.graduationdesign.model.JobExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from job
    where jobId = #{jobid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from job
    where jobId = #{jobid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="priv.edward.graduationdesign.model.JobExample">
    delete from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="priv.edward.graduationdesign.model.Job">
    insert into job (jobId, jobName, specificity
      )
    values (#{jobid,jdbcType=INTEGER}, #{jobname,jdbcType=VARCHAR}, #{specificity,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="priv.edward.graduationdesign.model.Job">
    insert into job
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobid != null">
        jobId,
      </if>
      <if test="jobname != null">
        jobName,
      </if>
      <if test="specificity != null">
        specificity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobid != null">
        #{jobid,jdbcType=INTEGER},
      </if>
      <if test="jobname != null">
        #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="specificity != null">
        #{specificity,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="priv.edward.graduationdesign.model.JobExample" resultType="java.lang.Long">
    select count(*) from job
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update job
    <set>
      <if test="record.jobid != null">
        jobId = #{record.jobid,jdbcType=INTEGER},
      </if>
      <if test="record.jobname != null">
        jobName = #{record.jobname,jdbcType=VARCHAR},
      </if>
      <if test="record.specificity != null">
        specificity = #{record.specificity,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update job
    set jobId = #{record.jobid,jdbcType=INTEGER},
      jobName = #{record.jobname,jdbcType=VARCHAR},
      specificity = #{record.specificity,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="priv.edward.graduationdesign.model.Job">
    update job
    <set>
      <if test="jobname != null">
        jobName = #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="specificity != null">
        specificity = #{specificity,jdbcType=CHAR},
      </if>
    </set>
    where jobId = #{jobid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="priv.edward.graduationdesign.model.Job">
    update job
    set jobName = #{jobname,jdbcType=VARCHAR},
      specificity = #{specificity,jdbcType=CHAR}
    where jobId = #{jobid,jdbcType=INTEGER}
  </update>
</mapper>